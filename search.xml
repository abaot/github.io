<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[SOCKS5代理与HTTP代理的区别]]></title>
    <url>%2F2019%2F02%2Fsocks5vshttp.html</url>
    <content type="text"><![CDATA[什么是SOCKS5协议。 SOCKS是一种网络传输协议，主要用于客户端与外网服务器之间通讯的中间传递。SOCKS是”Sockets”的缩写。 当防火墙后的客户端要访问外部的服务器时，就跟SOCKS代理服务器连接。这个代理服务器控制客户端访问外网的资格，允许的话，就将客户端的请求发往外部的服务器。这个协议最初由David-Koblas开发，而后由NEC的Ying-Da Lee将其扩展到版本4。最新协议是版本5，与前一版本相比，增加支持UDP、验证，以及IPv6。根据OSI模型，SOCKS是会话层的协议，位于表示层与传输层之间。 SOCKS5代理与HTTP代理的区别 SOCKS工作在比HTTP代理更低的层次：SOCKS使用握手协议来通知代理软件其客户端试图进行的连接SOCKS，然后尽可能透明地进行操作，而常规代理可能会解释和重写报头（例如，使用另一种底层协议，例如FTP；然而，HTTP代理只是将HTTP请求转发到所需的HTTP服务器）。虽然HTTP代理有不同的使用模式，CONNECT方法允许转发TCP连接；然而，SOCKS代理还可以转发UDP流量和反向代理，而HTTP代理不能。HTTP代理通常更了解HTTP协议，执行更高层次的过滤（虽然通常只用于GET和POST方法，而不用于CONNECT方法）。 SOCKS： Bill希望通过互联网与Jane沟通，但他们的网络之间存在一个防火墙，Bill不能直接与Jane沟通。所以，Bill连接到他的网络上的SOCKS代理，告知它他想要与Jane创建连接；SOCKS代理打开一个能穿过防火墙的连接，并促进Bill和Jane之间的通信。 HTTP： Bill希望从Jane的Web服务器下载一个网页。Bill不能直接连接到Jane的服务器，因为在他的网络上设置了防火墙。为了与该服务器通信，Bill连接到其网络的HTTP代理。他的网页浏览器与代理通信的方式与他直接连接Jane的服务器的方式相同；也就是说，网页浏览器会发送一个标准的HTTP请求头。HTTP代理连接到Jane的服务器，然后将Jane的服务器返回的任何数据传回Bill。 SOCKS5代理和VPN的区别 VPN（虚拟专网），你接入VPN就是接入了一个专有网络，那么你访问网络都是从这个专有网络的出口出去，好比你在家，你家路由器后面的网络设备是在同一个网络，而VPN则是让你的设备进入了另一个网络。同时你的IP地址也变成了由VPN分配的一个IP地址。通常是一个私网地址。你和VPN服务器之间的通信是否加密取决于连接VPN的具体方式/协议。 Sock5代理服务器则是把你的网络数据请求通过一条连接你和代理服务器之间的通道，由服务器转发到目的地。你没有加入任何新的网络，只是http/socks数据经过代理服务器的转发送出，并从代理服务器接收回应。你与代理服务器通信过程不会被额外处理，如果你用https，那本身就是加密的。 Shadowsocks全局模式与PAC模式的区别 PAC模式就是会在你连接网站的时候读取PAC文件里的规则，来确定你访问的网站有没有被墙，如果符合，那就会使用代理服务器连接网站，而PAC列表一般都是从更新的。定期会更新被墙的网站（不过一般挺慢的）。 简单地说，在全局模式下，所有网站默认走代理。而PAC模式是只有被墙的才会走代理，推荐PAC模式，如果PAC模式无法访问一些网站，就换全局模式试试，一般是因为PAC更新不及时（也可能是更新不及时）导致的。]]></content>
      <categories>
        <category>http</category>
      </categories>
      <tags>
        <tag>socks</tag>
        <tag>sock</tag>
        <tag>http</tag>
        <tag>vpn</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux修改默认SSH端口22]]></title>
    <url>%2F2019%2F02%2Flinux22port.html</url>
    <content type="text"><![CDATA[目前很多人还是使用密码来登陆服务器，并且服务器都是默认的 22端口，但是这样会有被破解密码危险（除非密码足够复杂），我写个更换SSH端口的教程。为了服务器安全，推荐：非22端口+Key密匙登陆+Key密匙密码，这样搭配最安全。SSH端口修改一键脚本：Debian/Ubuntu SSH端口一键修改脚本 修改默认端口 避免暴力破解为了保险起见，我们先添加一个SSH端口并添加对应的防火墙规则，然后用这个新的端口连接服务器试试，如果没问题了，我们再删除默认的22端口（之所以这这么做，就是因为如果直接修改端口，可能在出现一些问题后会导致你无法连接SSH，那就糟糕了）。 添加SSH端口vi /etc/ssh/sshd_config vi打开文件后，按 I键 进入编辑模式，然后按下面的要求添加端口配置，最后按 ESC键 退出编辑模式并输入 :wq 保存并退出vi编辑器。我们在默认的SSH端口配置下面添加一个我们要用的新的端口，例如12345 Port 22 默认的22端口配置，注意现在不删除这个默认的 22端口配置，避免修改后无法链接SSHPort 12345 新添加的 12345端口配置然后我们重启SSH。 /etc/init.d/ssh restart 如果提示服务不存在，那就用 /etc/init.d/sshd restartCentOS7 则用 systemctl restart sshd.service配置防火墙首先我们添加防火墙规则（示例端口为 12345，自己改）： iptables -I INPUT -p tcp --dport 12345 -j ACCEPT 然后不清楚你们是否配置了防火墙开机启动和开机启动读取防火墙配置文件，所以我这里也写上步骤，建议你们都做一下，避免重启VPS后，SSH端口防火墙没有开放导致无法连接服务器。配置防火墙开机启动下面的代码是配置防火墙开机启动并且保存防火墙规则，开机启动后会自动读取保存的防火墙规则。 CentOS 系统： 注意：如果是 CentOS7 系统，那么就不是iptables 防火墙了。 service iptables save chkconfig --level 12345 iptables on 以后需要保存防火墙规则只需要执行： service iptables save Debian/Ubuntu 系统： iptables-save &gt; /etc/iptables.up.rules echo -e &apos;#!/bin/bash\n/sbin/iptables-restore &lt; /etc/iptables.up.rules&apos; &gt; /etc/network/if-pre-up.d/iptables chmod +x /etc/network/if-pre-up.d/iptables 以后需要保存防火墙规则只需要执行： iptables-save &gt; /etc/iptables.up.rules 测试一下上面步骤做完了，那么请断开当前的SSH连接，然后把SSH端口改为新的端口（示例端口为 12345），链接新端口试试，如果连接正常，那么继续下面的步骤，如果连接不正常，那么使用旧端口 22 连接上面去排除问题。 取消默认SSH端口 22 vi /etc/ssh/sshd_config 我们再打开SSH配置文件，删除 Port 22 这一行，然后重启SSH即可。 /etc/init.d/ssh restart 如果提示服务不存在，那就用 /etc/init.d/sshd restartCentOS7 则用 systemctl restart sshd.service]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>port</tag>
        <tag>linux</tag>
        <tag>command</tag>
        <tag>ssh</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux最常用命令]]></title>
    <url>%2F2019%2F02%2Flinux.html</url>
    <content type="text"><![CDATA[首先，是关机/重启命令，仅在虚拟机时使用，实际工作中用不到reboot 一般不跟参数使用，输入指令即可重启 shutdown 一般需要跟参数，例： shutdown -r 延时多少分钟重启，一般使用now shutdown -r now 立即重启 shutdown -f 强制重启 跟windows一样，linux也存在注销功能exit 1)halt halt 可不接参数 halt -f 强制关机 2）poweroff poweroff 可不接参数使用 poweroff -f 强制关机 3）init 0 4）shutdown 不可单独使用 shutdown -h 分钟数 延时多久关机 shutdown -h now 立即关机 最最常用的是cd 命令cd 进入用户主目录； cd ~ 进入用户主目录； cd - 返回进入此目录之前所在的目录； cd .. 返回上级目录（若当前目录为“/“，则执行完后还在“/&quot;；&quot;..&quot;为上级目录的意思）； cd ../.. 返回上两级目录； 新建文件夹和文件：mkdir touchmkdir 创建文件夹 mkdir dirname 直接跟文件夹名，可在当前目录下创建文件夹 mkdir /opt/lamp/dirname 可跟路径 mkdir -p /opt/lam/dirname 假如lam不存在，需要用-p才可以创建该文件夹 touch 新建文件 touch dilename 可直接跟文件名在当前目录下创建新的文件 cat/less/more/tail等文件查看命令 -n或-number：有1开始对所有输出的行数编号； -b或--number-nonblank：和-n相似，只不过对于空白行不编号； -s或--squeeze-blank：当遇到有连续两行以上的空白行，就代换为一行的空白行； -A：显示不可打印字符，行尾显示“$”； -e：等价于&quot;-vE&quot;选项； -t：等价于&quot;-vT&quot;选项； -e：文件内容显示完毕后，自动退出； -f：强制显示文件； -g：不加亮显示搜索到的所有关键词，仅显示当前显示的关键字，以提高显示速度； -l：搜索时忽略大小写的差异； -N：每一行行首显示行号； -s：将连续多个空行压缩成一行显示； -S：在单行显示较长的内容，而不换行显示； -x&lt;数字&gt;：将TAB字符显示为指定个数的空格字符。 -&lt;数字&gt;：指定每屏显示的行数； -d：显示“[press space to continue,&apos;q&apos; to quit.]”和“[Press &apos;h&apos; for instructions]”； -c：不进行滚屏操作。每次刷新这个屏幕； -s：将多个空行压缩成一行显示； -u：禁止下划线； +&lt;数字&gt;：从指定数字的行开始显示。 按Space键：显示文本的下一屏内容。 按Enier键：只显示文本的下一行内容。 按斜线符|：接着输入一个模式，可以在文本中寻找下一个相匹配的模式。 按H键：显示帮助屏，该屏上有相关的帮助信息。 按B键：显示上一屏内容。 按Q键：退出rnore命令。 --retry：即是在tail命令启动时，文件不可访问或者文件稍后变得不可访问，都始终尝试打开文件。使用此选项时需要与选项“——follow=name”连用； -c或——bytes=：输出文件尾部的N（N为整数）个字节内容； -f或；--follow：显示文件最新追加的内容。“name”表示以文件名的方式监视文件的变化。“-f”与“-fdescriptor”等效； -F：与选项“-follow=name”和“--retry&quot;连用时功能相同； -n或——line=：输出文件的尾部N（N位数字）行内容。 --pid=&lt;进程号&gt;：与“-f”选项连用，当指定的进程号的进程终止后，自动退出tail命令； -q或——quiet或——silent：当有多个文件参数时，不输出各个文件名； -s&lt;秒数&gt;或——sleep-interal=&lt;秒数&gt;：与“-f”选项连用，指定监视文件变化时间隔的秒数； -v或——verbose：当有多个文件参数时，总是输出各个文件名； 一般tail命令最常用的-n和-f，例： tail filename 读取filename最后10行内容 tail -f filename 实时动态读取filename最后10行内容 tail -20f filename 实时动态读取filename最后20行内容 复制代码 cat和less及more指令相似，cat是一次性读取所有内容，文件内容较多时速度较慢。less与more的区别在于：less可以前后翻页查看，more只能向前翻页查看。 tail则用于实时获取log信息，从后向前读取内容 上述四种命令均可跟grep搭配使用cat/less/tail |grep mysql 查看文件大小的命令 du/dfdu -sh * 显示当前目录下所有文件的大小 du -sh filename 显示该文件大小 du -sh 显示当前目录所占空间大小 -s或 仅显示总计，只列出最后加总的值。 -h或 以K，M，G为单位，提高信息的可读性。 df 显示磁盘占用信息 直接df默认一k为单位 df -lh 显示本地系统的占用信息，以K，M，G为单位 大重点–文本编辑器 vivi命令是UNIX操作系统和类UNIX操作系统中最通用的全屏幕纯文本编辑器。Linux中的vi编辑器叫vim，它是vi的增强版（vi Improved），与vi编辑器完全兼容，而且实现了很多增强功能。vi编辑器支持编辑模式和命令模式，编辑模式下可以完成文本的编辑功能，命令模式下可以完成对文件的操作命令，要正确使用vi编辑器就必须熟练掌握着两种模式的切换。默认情况下，打开vi编辑器后自动进入命令模式。从编辑模式切换到命令模式使用“esc”键，从命令模式切换到编辑模式使用“A”、“a”、“O”、“o”、“I”、“i”键。vi编辑器提供了丰富的内置命令，有些内置命令使用键盘组合键即可完成，有些内置命令则需要以冒号“：”开头输入。常用内置命令如下： 1 Ctrl+u：向文件首翻半屏； 2 Ctrl+d：向文件尾翻半屏； 3 Ctrl+f：向文件尾翻一屏； 4 Ctrl+b：向文件首翻一屏； 5 Esc：从编辑模式切换到命令模式； 6 ZZ：命令模式下保存当前文件所做的修改后退出vi； 7 :行号：光标跳转到指定行的行首； 8 :$：光标跳转到最后一行的行首； 9 x或X：删除一个字符，x删除光标后的，而X删除光标前的； 10 D：删除从当前光标到光标所在行尾的全部字符； 11 dd：删除光标行正行内容； 12 ndd：删除当前行及其后n-1行； 13 nyy：将当前行及其下n行的内容保存到寄存器?中，其中？为一个字母，n为一个数字； 14 p：粘贴文本操作，用于将缓存区的内容粘贴到当前光标所在位置的下方； 15 P：粘贴文本操作，用于将缓存区的内容粘贴到当前光标所在位置的上方； 16 /字符串：文本查找操作，用于从当前光标所在位置开始向文件尾部查找指定字符串的内容，查找的字符串会被加亮显示； 17 ？name：文本查找操作，用于从当前光标所在位置开始向文件头部查找指定字符串的内容，查找的字符串会被加亮显示； 18 a，bs/F/T：替换文本操作，用于在第a行到第b行之间，将F字符串换成T字符串。其中，“s/”表示进行替换操作； 19 a：在当前字符后添加文本； 20 A：在行末添加文本； 21 i：在当前字符前插入文本； 22 I：在行首插入文本； 23 o：在当前行后面插入一空行； 24 O：在当前行前面插入一空行； 25 :wq：在命令模式下，执行存盘退出操作； 26 :w：在命令模式下，执行存盘操作； 27 :w！：在命令模式下，执行强制存盘操作； 28 :q：在命令模式下，执行退出vi操作； 29 :q！：在命令模式下，执行强制退出vi操作； 30 :e文件名：在命令模式下，打开并编辑指定名称的文件； 31 :n：在命令模式下，如果同时打开多个文件，则继续编辑下一个文件； 32 :f：在命令模式下，用于显示当前的文件名、光标所在行的行号以及显示比例； 33 :set nu：在命令模式下，用于在最左端显示行号； 34 :set nonu：在命令模式下，用于在最左端不显示行号； 35 :1,3y 复制第一行到第三行 36 :1,3d 删除第一行到第三行 37 :1,3s/str/str_new/g 替换第一行到第三行中的字符串 38 :1,3s/str/str_new 替换第一行到第三行中的字符串第一个字符 39 :1,3 g/str /d 删除第一行到第三行中含有这个字符串的行 移动文件及文件夹 mv/cpmv 类似于windows下的剪切 mv aaa /etc/udev 讲aaa移动至/etc/udev目录下 mv /opt/lampp /etc/udev 将/opt目录下的lampp移动至/etc/udev目录下 mv -r aaa /etc/udev 将aaa文件夹递归移动至/etc/udev目录下，不加-r会出错 mv aaa bbb 将aaa改名为bbb -b：当文件存在时，覆盖前，为其创建一个备份； -f：若目标文件或目录与现有的文件或目录重复，则直接覆盖现有的文件或目录； -i：交互式操作，覆盖前先行询问用户，如果源文件与目标文件或目标目录中的文件同名，则询问用户是否覆盖目标文件。 -u：当源文件比目标文件新或者目标文件不存在时，才执行移动操作。 -f：强行复制文件或目录，不论目标文件或目录是否已存在； -i：覆盖既有文件之前先询问用户； -s：对源文件建立符号连接，而非复制文件； -R/r：递归处理，将指定目录下的所有文件与子目录一并处理 用法与mv基本相似 cp 路径1 路径2 重定向 &gt;cat aaa.txt &gt; bbb.txt 将aaa的内容写入bbb中，覆盖写入 cat aaa.txt &gt;&gt; bbb.txt 讲aaa的内容追加写入bbb中，不覆盖原来内容 &gt; bbb.txt 将bbb清空 权限管理 chmodchmod -R 给文件夹下所有的文件赋权限，递归处理 chmod u+x,g+w f01 //为文件f01设置自己可以执行，组员可以写入的权限 chmod u=rwx,g=rw,o=r f01 给所属用户添加读写执行权限，给组添加读写权限，给其他用户添加读权限 chmod 764 f01 以数字的方式赋予所属用户/用户组/其他用户权限r=4，w=2，x=1 chmod a+x f01 //对文件f01的u,g,o都设置可执行属性，a代表all 删除命令 rm一般都用rm -rf aaa -r 递归删除 -f 强制删除，不询问 rm使用时需要谨慎，公司服务器删错就完犊子了 查看服务netstat -nlpt|grep 80 查看该端口号是否被占用 ps可以查看具体的进程信息，一般与管道符连接其他命令使用，如：grep ps常用参数-ef/-aux，一般最常用还是-ef，例：ps -ef|grep mysql 查询mysql进程 top也可查看进程信息，而且是动态显示 whoami 查看当前登陆用户 who 查看多少用户在使用系统 date查看系统时间，可跟时间格式使用 cal查看日历，可跟年份，查看指定的年份 chkconfig --list #查看系统服务启动 chkconfig iptables on #开机启动该服务 chkconfig iptables off #开机不启动该服务 service iptables start #启动该服务 service iptables restart #重启启该服务 ps -ef|grep mysql|grep -v grep|awk &apos;{print $2}&apos; ps -ef|grep mysql 是查询mysql服务的进程 |后的grep -v grep 是匹配不包含grep的行 awk是取查询结果的第几列，awk &apos;{print $2}&apos;则是取第二列的值 grep 无参数则显示匹配的行 -c 显示匹配的行数 -v 显示不匹配的行 杀掉进程 kill 命令kill最常用的参数是-9，用法：kill -9 进程号 即可强制杀掉该进程 统计命令 wc 常用的参数是 -l 用法：wc -l ，例： ps -ef|grep mysql|wc -l 统计查询出的mysql进程的行数 查找命令 find/locate/whereis/whichfind -name 后跟文件名，可查看文件所在目录，可跟user，查看属于user的文件 find -name filename 查找filename所在目录 find -name name* 查找开头为name的文件所在目录 find -name *name 查找结尾为name的文件所在目录 find -name *name* 查找包含name字符串的文件所在目录 find -user faith 查看用户faith的文件 locate用法与find基本相似，只是locate搜索速度较快些，locate一般系统不会自带，需要安装，可用yum安装 whereis只能搜索程序名 which则是只查询path中的环境变量]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>command</tag>
        <tag>shell</tag>
      </tags>
  </entry>
</search>
